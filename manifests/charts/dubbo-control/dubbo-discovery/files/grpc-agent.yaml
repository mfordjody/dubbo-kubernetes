{{- $containers := list }}
{{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "dubbo-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
metadata:
  annotations:
    dubbo.io/rev: default
spec:
  containers:
  - name: dubbo-proxy
    image: "{{ $.ProxyImage }}"
    imagePullPolicy: Always # test
    ports:
    - containerPort: 15020
      protocol: TCP
      name: mesh-metrics
    args:
    - proxy
    - --domain
    - $(POD_NAMESPACE).svc.cluster.local
    lifecycle:
      postStart:
        exec:
          command:
          - sail-agent
          - wait
          - --url=http://localhost:15020/healthz/ready
    readinessProbe:
      failureThreshold: 4
      httpGet:
        path: /healthz/ready
        port: 15020
        scheme: HTTP
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
      initialDelaySeconds: 30
    env:
    - name: DUBBO_META_GENERATOR
      value: grpc
    - name: OUTPUT_CERTS
      value: /var/lib/dubbo/data
    - name: SAIL_CERT_PROVIDER
      value: dubbod
    - name: DUBBO_META_CLUSTER_ID
      value: Kubernetes
    - name: CA_ADDR
      value: dubbod.dubbo-system.svc:15012
    - name: PROXY_CONFIG
      value: |
        {"holdApplicationUntilProxyStarts":true}
    - name: DUBBO_META_MESH_ID
      value: cluster.local
    - name: TRUST_DOMAIN
      value: cluster.local
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          fieldPath: spec.serviceAccountName
    - name: HOST_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    volumeMounts:
    - mountPath: /var/lib/dubbo/data
      name: dubbo-data
    - mountPath: /etc/dubbo/proxy
      name: dubbo-xds
    - mountPath: /var/run/secrets/workload-spiffe-uds
      name: workload-socket
    - mountPath: /var/run/secrets/workload-spiffe-credentials
      name: workload-certs
    - mountPath: /etc/dubbo/pod
      name: dubbo-podinfo
    - mountPath: /var/run/secrets/dubbo
      name: dubbod-ca-cert
  volumes:
  - emptyDir:
      medium: Memory
    name: dubbo-xds
  - emptyDir: {}
    name: dubbo-data
  - emptyDir: {}
    name: workload-socket
  - emptyDir: {}
    name: workload-certs
  - downwardAPI:
      defaultMode: 420
      items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
    name: dubbo-podinfo
  - configMap:
      defaultMode: 420
      name: istio-ca-root-cert
    name: dubbod-ca-cert

